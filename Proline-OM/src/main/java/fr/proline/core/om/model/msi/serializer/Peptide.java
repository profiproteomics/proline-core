/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package fr.proline.core.om.model.msi.serializer;  
@SuppressWarnings("all")
public class Peptide extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Peptide\",\"namespace\":\"fr.proline.core.om.model.msi.serializer\",\"fields\":[{\"name\":\"id\",\"type\":\"int\"},{\"name\":\"sequence\",\"type\":\"string\"},{\"name\":\"ptm_string\",\"type\":\"string\"},{\"name\":\"calculated_mass\",\"type\":\"double\"},{\"name\":\"ptms\",\"type\":{\"type\":\"array\",\"items\":\"string\"}}]}");
  @Deprecated public int id;
  @Deprecated public java.lang.CharSequence sequence;
  @Deprecated public java.lang.CharSequence ptm_string;
  @Deprecated public double calculated_mass;
  @Deprecated public java.util.List<java.lang.CharSequence> ptms;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return sequence;
    case 2: return ptm_string;
    case 3: return calculated_mass;
    case 4: return ptms;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Integer)value$; break;
    case 1: sequence = (java.lang.CharSequence)value$; break;
    case 2: ptm_string = (java.lang.CharSequence)value$; break;
    case 3: calculated_mass = (java.lang.Double)value$; break;
    case 4: ptms = (java.util.List<java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Integer getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Integer value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'sequence' field.
   */
  public java.lang.CharSequence getSequence() {
    return sequence;
  }

  /**
   * Sets the value of the 'sequence' field.
   * @param value the value to set.
   */
  public void setSequence(java.lang.CharSequence value) {
    this.sequence = value;
  }

  /**
   * Gets the value of the 'ptm_string' field.
   */
  public java.lang.CharSequence getPtmString() {
    return ptm_string;
  }

  /**
   * Sets the value of the 'ptm_string' field.
   * @param value the value to set.
   */
  public void setPtmString(java.lang.CharSequence value) {
    this.ptm_string = value;
  }

  /**
   * Gets the value of the 'calculated_mass' field.
   */
  public java.lang.Double getCalculatedMass() {
    return calculated_mass;
  }

  /**
   * Sets the value of the 'calculated_mass' field.
   * @param value the value to set.
   */
  public void setCalculatedMass(java.lang.Double value) {
    this.calculated_mass = value;
  }

  /**
   * Gets the value of the 'ptms' field.
   */
  public java.util.List<java.lang.CharSequence> getPtms() {
    return ptms;
  }

  /**
   * Sets the value of the 'ptms' field.
   * @param value the value to set.
   */
  public void setPtms(java.util.List<java.lang.CharSequence> value) {
    this.ptms = value;
  }

  /** Creates a new Peptide RecordBuilder */
  public static fr.proline.core.om.model.msi.serializer.Peptide.Builder newBuilder() {
    return new fr.proline.core.om.model.msi.serializer.Peptide.Builder();
  }
  
  /** Creates a new Peptide RecordBuilder by copying an existing Builder */
  public static fr.proline.core.om.model.msi.serializer.Peptide.Builder newBuilder(fr.proline.core.om.model.msi.serializer.Peptide.Builder other) {
    return new fr.proline.core.om.model.msi.serializer.Peptide.Builder(other);
  }
  
  /** Creates a new Peptide RecordBuilder by copying an existing Peptide instance */
  public static fr.proline.core.om.model.msi.serializer.Peptide.Builder newBuilder(fr.proline.core.om.model.msi.serializer.Peptide other) {
    return new fr.proline.core.om.model.msi.serializer.Peptide.Builder(other);
  }
  
  /**
   * RecordBuilder for Peptide instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Peptide>
    implements org.apache.avro.data.RecordBuilder<Peptide> {

    private int id;
    private java.lang.CharSequence sequence;
    private java.lang.CharSequence ptm_string;
    private double calculated_mass;
    private java.util.List<java.lang.CharSequence> ptms;

    /** Creates a new Builder */
    private Builder() {
      super(fr.proline.core.om.model.msi.serializer.Peptide.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(fr.proline.core.om.model.msi.serializer.Peptide.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Peptide instance */
    private Builder(fr.proline.core.om.model.msi.serializer.Peptide other) {
            super(fr.proline.core.om.model.msi.serializer.Peptide.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = (java.lang.Integer) data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sequence)) {
        this.sequence = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.sequence);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ptm_string)) {
        this.ptm_string = (java.lang.CharSequence) data().deepCopy(fields()[2].schema(), other.ptm_string);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.calculated_mass)) {
        this.calculated_mass = (java.lang.Double) data().deepCopy(fields()[3].schema(), other.calculated_mass);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ptms)) {
        this.ptms = (java.util.List<java.lang.CharSequence>) data().deepCopy(fields()[4].schema(), other.ptms);
        fieldSetFlags()[4] = true;
      }
    }

    /** Gets the value of the 'id' field */
    public java.lang.Integer getId() {
      return id;
    }
    
    /** Sets the value of the 'id' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder setId(int value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'id' field has been set */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'id' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'sequence' field */
    public java.lang.CharSequence getSequence() {
      return sequence;
    }
    
    /** Sets the value of the 'sequence' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder setSequence(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.sequence = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'sequence' field has been set */
    public boolean hasSequence() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'sequence' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder clearSequence() {
      sequence = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ptm_string' field */
    public java.lang.CharSequence getPtmString() {
      return ptm_string;
    }
    
    /** Sets the value of the 'ptm_string' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder setPtmString(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.ptm_string = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ptm_string' field has been set */
    public boolean hasPtmString() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ptm_string' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder clearPtmString() {
      ptm_string = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'calculated_mass' field */
    public java.lang.Double getCalculatedMass() {
      return calculated_mass;
    }
    
    /** Sets the value of the 'calculated_mass' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder setCalculatedMass(double value) {
      validate(fields()[3], value);
      this.calculated_mass = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'calculated_mass' field has been set */
    public boolean hasCalculatedMass() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'calculated_mass' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder clearCalculatedMass() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ptms' field */
    public java.util.List<java.lang.CharSequence> getPtms() {
      return ptms;
    }
    
    /** Sets the value of the 'ptms' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder setPtms(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[4], value);
      this.ptms = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ptms' field has been set */
    public boolean hasPtms() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ptms' field */
    public fr.proline.core.om.model.msi.serializer.Peptide.Builder clearPtms() {
      ptms = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Peptide build() {
      try {
        Peptide record = new Peptide();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Integer) defaultValue(fields()[0]);
        record.sequence = fieldSetFlags()[1] ? this.sequence : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.ptm_string = fieldSetFlags()[2] ? this.ptm_string : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.calculated_mass = fieldSetFlags()[3] ? this.calculated_mass : (java.lang.Double) defaultValue(fields()[3]);
        record.ptms = fieldSetFlags()[4] ? this.ptms : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
