/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package fr.proline.core.om.model.msi.serializer;  
@SuppressWarnings("all")
public class FragmentIonType extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FragmentIonType\",\"namespace\":\"fr.proline.core.om.model.msi.serializer\",\"fields\":[{\"name\":\"ion_series\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"neutral_loss\",\"type\":\"string\"}]}");
  @Deprecated public java.lang.CharSequence ion_series;
  @Deprecated public java.lang.CharSequence neutral_loss;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ion_series;
    case 1: return neutral_loss;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ion_series = (java.lang.CharSequence)value$; break;
    case 1: neutral_loss = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ion_series' field.
   */
  public java.lang.CharSequence getIonSeries() {
    return ion_series;
  }

  /**
   * Sets the value of the 'ion_series' field.
   * @param value the value to set.
   */
  public void setIonSeries(java.lang.CharSequence value) {
    this.ion_series = value;
  }

  /**
   * Gets the value of the 'neutral_loss' field.
   */
  public java.lang.CharSequence getNeutralLoss() {
    return neutral_loss;
  }

  /**
   * Sets the value of the 'neutral_loss' field.
   * @param value the value to set.
   */
  public void setNeutralLoss(java.lang.CharSequence value) {
    this.neutral_loss = value;
  }

  /** Creates a new FragmentIonType RecordBuilder */
  public static fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder newBuilder() {
    return new fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder();
  }
  
  /** Creates a new FragmentIonType RecordBuilder by copying an existing Builder */
  public static fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder newBuilder(fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder other) {
    return new fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder(other);
  }
  
  /** Creates a new FragmentIonType RecordBuilder by copying an existing FragmentIonType instance */
  public static fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder newBuilder(fr.proline.core.om.model.msi.serializer.FragmentIonType other) {
    return new fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder(other);
  }
  
  /**
   * RecordBuilder for FragmentIonType instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FragmentIonType>
    implements org.apache.avro.data.RecordBuilder<FragmentIonType> {

    private java.lang.CharSequence ion_series;
    private java.lang.CharSequence neutral_loss;

    /** Creates a new Builder */
    private Builder() {
      super(fr.proline.core.om.model.msi.serializer.FragmentIonType.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing FragmentIonType instance */
    private Builder(fr.proline.core.om.model.msi.serializer.FragmentIonType other) {
            super(fr.proline.core.om.model.msi.serializer.FragmentIonType.SCHEMA$);
      if (isValidValue(fields()[0], other.ion_series)) {
        this.ion_series = (java.lang.CharSequence) data().deepCopy(fields()[0].schema(), other.ion_series);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.neutral_loss)) {
        this.neutral_loss = (java.lang.CharSequence) data().deepCopy(fields()[1].schema(), other.neutral_loss);
        fieldSetFlags()[1] = true;
      }
    }

    /** Gets the value of the 'ion_series' field */
    public java.lang.CharSequence getIonSeries() {
      return ion_series;
    }
    
    /** Sets the value of the 'ion_series' field */
    public fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder setIonSeries(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ion_series = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ion_series' field has been set */
    public boolean hasIonSeries() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ion_series' field */
    public fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder clearIonSeries() {
      ion_series = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'neutral_loss' field */
    public java.lang.CharSequence getNeutralLoss() {
      return neutral_loss;
    }
    
    /** Sets the value of the 'neutral_loss' field */
    public fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder setNeutralLoss(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.neutral_loss = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'neutral_loss' field has been set */
    public boolean hasNeutralLoss() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'neutral_loss' field */
    public fr.proline.core.om.model.msi.serializer.FragmentIonType.Builder clearNeutralLoss() {
      neutral_loss = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    public FragmentIonType build() {
      try {
        FragmentIonType record = new FragmentIonType();
        record.ion_series = fieldSetFlags()[0] ? this.ion_series : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.neutral_loss = fieldSetFlags()[1] ? this.neutral_loss : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
