/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package fr.proline.core.om.model.msi.serializer;  
@SuppressWarnings("all")
public class PeptideMatchProperties extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PeptideMatchProperties\",\"namespace\":\"fr.proline.core.om.model.msi.serializer\",\"fields\":[{\"name\":\"mascot_properties\",\"type\":{\"type\":\"record\",\"name\":\"PeptideMatchMascotProperties\",\"fields\":[{\"name\":\"expectation_value\",\"type\":\"float\"},{\"name\":\"readable_var_mods\",\"type\":[\"string\",\"null\"]},{\"name\":\"var_mods_positions\",\"type\":[\"string\",\"null\"]}]}}]}");
  @Deprecated public fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties mascot_properties;
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return mascot_properties;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: mascot_properties = (fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'mascot_properties' field.
   */
  public fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties getMascotProperties() {
    return mascot_properties;
  }

  /**
   * Sets the value of the 'mascot_properties' field.
   * @param value the value to set.
   */
  public void setMascotProperties(fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties value) {
    this.mascot_properties = value;
  }

  /** Creates a new PeptideMatchProperties RecordBuilder */
  public static fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder newBuilder() {
    return new fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder();
  }
  
  /** Creates a new PeptideMatchProperties RecordBuilder by copying an existing Builder */
  public static fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder newBuilder(fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder other) {
    return new fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder(other);
  }
  
  /** Creates a new PeptideMatchProperties RecordBuilder by copying an existing PeptideMatchProperties instance */
  public static fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder newBuilder(fr.proline.core.om.model.msi.serializer.PeptideMatchProperties other) {
    return new fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder(other);
  }
  
  /**
   * RecordBuilder for PeptideMatchProperties instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PeptideMatchProperties>
    implements org.apache.avro.data.RecordBuilder<PeptideMatchProperties> {

    private fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties mascot_properties;

    /** Creates a new Builder */
    private Builder() {
      super(fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing PeptideMatchProperties instance */
    private Builder(fr.proline.core.om.model.msi.serializer.PeptideMatchProperties other) {
            super(fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.SCHEMA$);
      if (isValidValue(fields()[0], other.mascot_properties)) {
        this.mascot_properties = (fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties) data().deepCopy(fields()[0].schema(), other.mascot_properties);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'mascot_properties' field */
    public fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties getMascotProperties() {
      return mascot_properties;
    }
    
    /** Sets the value of the 'mascot_properties' field */
    public fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder setMascotProperties(fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties value) {
      validate(fields()[0], value);
      this.mascot_properties = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'mascot_properties' field has been set */
    public boolean hasMascotProperties() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'mascot_properties' field */
    public fr.proline.core.om.model.msi.serializer.PeptideMatchProperties.Builder clearMascotProperties() {
      mascot_properties = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public PeptideMatchProperties build() {
      try {
        PeptideMatchProperties record = new PeptideMatchProperties();
        record.mascot_properties = fieldSetFlags()[0] ? this.mascot_properties : (fr.proline.core.om.model.msi.serializer.PeptideMatchMascotProperties) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
